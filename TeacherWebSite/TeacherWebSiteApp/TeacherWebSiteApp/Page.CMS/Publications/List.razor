@page "/cms/publications"
@inject IDbContextFactory<TeacherContext> DbFactory
@inject MessageService _message
@attribute [Authorize(Roles = "admin")]
@inject NavigationManager NavManager
@namespace TeacherWebSiteApp.Page.CMS.Publications
@layout CmsLayout


    <Title Level="3">Публикации</Title>
    @{ string add = "/cms/publication/0"; }

    <InputGroup Style="margin-bottom: 20px">
        <AntDesign.Button @onclick="() => NavManager.NavigateTo(add)">Добавить</AntDesign.Button>
    </InputGroup>

    <Table DataSource="publications" TItem="TeacherWebSiteApp.Data.Models.Publication" HidePagination="false">
        <Column Title="Название" @bind-Field="@context.Name" TData="string" Sortable>
            <a href="/cms/publication/@context.Id">@context.Name</a>
        </Column>
        <Column Title="Описание" @bind-Field="@context.Text" TData="string" />
        <Column Title="Дата создания" @bind-Field="@context.Date" Format="dd-MM-yyyy" Sortable />
        <Column Title="Активный" @bind-Field="@context.IsActive" TData="bool?">
            <Switch OnChange="async (val) => await SwitchActive(context.Id, val)" Checked="@context.IsActive.Value" />
        </Column>
    </Table>
    
  

@code {
    List<TeacherWebSiteApp.Data.Models.Publication> publications;
    bool status = false;

    protected override async Task OnInitializedAsync()
    {
        using TeacherContext context = DbFactory.CreateDbContext();
        publications = await context.Publications.Include(p => p.Attachments).ToListAsync();

    }


    private async Task SwitchActive(int Id, bool? value)
    {
        using var context = DbFactory.CreateDbContext();
        var publication = await context.Publications.Include(a => a.Attachments).FirstOrDefaultAsync(p => p.Id == Id);
        if (publication != null)
        {
            publication.IsActive = value;
            await context.SaveChangesAsync();
            string state = (publication.IsActive.Value) ? "активированa" : "деактивированa";
            _message.Info($"Публикация {publication.Name} {state}.");
            NavManager.NavigateTo("/cms/publications",true);
        }
    }

}
