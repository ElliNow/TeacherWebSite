@inject NavigationManager Nav
@inherits LayoutComponentBase
@inject AuthenticationStateProvider provider

@{ 
    string cms = "/cms";
    string cmsNewsfeed = "/cms/publications";
    string cmsArticles = "/cms/articles";
    string cmsAbout = "/cms/about";
    string cmsContacts = "/cms/contacts";
    string newsfeed = "/newsfeed";
}

<Layout>
    <Header Style="position: fixed; background: #00BFFF; width: 100%; ">
        <div class="container">
            <div class="logo" style="width:100%" />
            <Menu Mode="MenuMode.Horizontal" DefaultSelectedKeys=@(new[]{"/"})>
                <MenuItem @onclick="() => { Nav.NavigateTo(cms, true); }">CMS</MenuItem>
                <a @onclick="() => { Nav.NavigateTo(newsfeed, true); }">
                    <span class="badge badge-secondary">На сайт</span>
                </a>
                <MenuItem @onclick="() => { Nav.NavigateTo(cmsNewsfeed, true); }">Публикации</MenuItem>
                <MenuItem @onclick="() => { Nav.NavigateTo(cmsArticles, true); }">Статьи</MenuItem>
                <MenuItem @onclick="() => { Nav.NavigateTo(cmsAbout, true); }">О себе</MenuItem>
                <MenuItem @onclick="() => { Nav.NavigateTo(cmsContacts, true); }">Контакты</MenuItem>
            </Menu>
        </div>
    </Header>
</Layout>

<div class="container content" style="margin-bottom:30px; margin-top: 35px">
    @Body
</div>

@code { 
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    } 
}
